// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechSocial.Models;

#nullable disable

namespace TechSocial.Migrations
{
    [DbContext(typeof(TechSocialDbConText))]
    partial class TechSocialDbConTextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoxNews.Models.TblAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("tblAccounts");
                });

            modelBuilder.Entity("BoxNews.Models.TblCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("tblCategory");
                });

            modelBuilder.Entity("BoxNews.Models.TblPost", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgSrc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostsView")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.ToTable("tblPosts");
                });

            modelBuilder.Entity("BoxNews.Models.TblRating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Point")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("AccountId");

                    b.HasIndex("PostId");

                    b.ToTable("tblRatings");
                });

            modelBuilder.Entity("BoxNews.Models.TblRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("tblRoles");
                });

            modelBuilder.Entity("BoxNews.Models.TblAccount", b =>
                {
                    b.HasOne("BoxNews.Models.TblRole", "Role")
                        .WithMany("TblAccounts")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BoxNews.Models.TblPost", b =>
                {
                    b.HasOne("BoxNews.Models.TblAccount", "Account")
                        .WithMany("TblPosts")
                        .HasForeignKey("AccountId");

                    b.HasOne("BoxNews.Models.TblCategory", "Category")
                        .WithMany("TblPosts")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Account");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BoxNews.Models.TblRating", b =>
                {
                    b.HasOne("BoxNews.Models.TblAccount", "Account")
                        .WithMany("TblRatings")
                        .HasForeignKey("AccountId");

                    b.HasOne("BoxNews.Models.TblPost", "Post")
                        .WithMany("TblRatings")
                        .HasForeignKey("PostId");

                    b.Navigation("Account");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("BoxNews.Models.TblAccount", b =>
                {
                    b.Navigation("TblPosts");

                    b.Navigation("TblRatings");
                });

            modelBuilder.Entity("BoxNews.Models.TblCategory", b =>
                {
                    b.Navigation("TblPosts");
                });

            modelBuilder.Entity("BoxNews.Models.TblPost", b =>
                {
                    b.Navigation("TblRatings");
                });

            modelBuilder.Entity("BoxNews.Models.TblRole", b =>
                {
                    b.Navigation("TblAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
