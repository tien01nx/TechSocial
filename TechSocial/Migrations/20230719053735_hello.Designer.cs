// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechSocial.Models;

#nullable disable

namespace TechSocial.Migrations
{
    [DbContext(typeof(TechSocialDbConText))]
    [Migration("20230719053735_hello")]
    partial class hello
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TechSocial.Models.TblCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("tblCategory");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Android",
                            Description = "Android"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "iOS",
                            Description = "iOS"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Windows",
                            Description = "Windows"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "macOS",
                            Description = "macOS"
                        });
                });

            modelBuilder.Entity("TechSocial.Models.TblComments", b =>
                {
                    b.Property<int>("Comments")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Comments"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Comments");

                    b.HasIndex("AccountId");

                    b.HasIndex("PostId");

                    b.ToTable("TblComments");
                });

            modelBuilder.Entity("TechSocial.Models.TblPost", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgSrc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostsView")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.ToTable("tblPosts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            CategoryId = 1,
                            Content = "<p><span class=\"xf-body-paragraph\"><a class=\"Tinhte_XenTag_TagLink\" href=\"https://tinhte.vn/tag/apple-carplay\">Apple Carplay</a>&nbsp;v&agrave;&nbsp;<a class=\"internalLink\" href=\"https://tinhte.vn/thread/trai-nghiem-nhanh-android-auto-da-chay-rat-muot-tro-ly-tieng-viet-de-dung-hon-apple-carplay-nhieu.3653988/\">Android Auto</a>&nbsp;l&agrave; hai nền tảng gi&uacute;p đưa những th&ocirc;ng tin, ứng dụng cần thiết ở điện thoại l&ecirc;n m&agrave;n h&igrave;nh giải tr&iacute; của xe hơi. Th&ocirc;ng qua n&ecirc;n tảng n&agrave;y, người l&aacute;i xe c&oacute; thể an to&agrave;n sử dụng hầu hết c&aacute;c t&iacute;nh năng th&ocirc;ng qua cử chỉ hoặc ra lệnh bằng giọng n&oacute;i th&ocirc;ng qua trợ l&yacute; ảo. Chủ đề n&agrave;y kh&ocirc;ng mới, nhưng muốn chia sẻ lại đến c&aacute;c bạn mới l&agrave;m quen với xe hơi, đặc biệt l&agrave; quan t&acirc;m đến hệ thống giải tr&iacute; tr&ecirc;n xe hơi.<br><br>Nếu như c&aacute;ch đ&acirc;y khoảng 3 năm trở về trước, 2 ứng dụng n&agrave;y c&oacute; mức phổ biến kh&aacute; k&eacute;m tại thị trường Việt Nam, thậm ch&iacute;&nbsp;<a class=\"Tinhte_XenTag_TagLink\" href=\"https://tinhte.vn/tag/android-auto\">Android Auto</a>&nbsp;c&ograve;n kh&ocirc;ng được ch&iacute;nh thức cung cấp cho người d&ugrave;ng tại Việt Nam (kh&ocirc;ng r&otilde; l&yacute; do) th&igrave; giờ đ&acirc;y, c&aacute;c thương hiệu từ xe sang cho đến những chiếc xe phổ th&ocirc;ng hơn 300 triệu đồng cũng đ&atilde; được trang bị. Đ&acirc;y vẫn lu&ocirc;n l&agrave; 2 t&iacute;nh năng m&agrave; m&igrave;nh đ&aacute;nh gi&aacute; cao v&agrave; sử dụng n&oacute; nhiều nhất, những m&agrave;n h&igrave;nh&nbsp;<a class=\"Tinhte_XenTag_TagLink\" href=\"https://tinhte.vn/tag/android\">Android</a>&nbsp;trang bị gắn th&ecirc;m mặc d&ugrave; c&oacute; loạt t&iacute;nh năng rất hấp dẫn, xong do nhu cầu c&aacute; nh&acirc;n v&agrave; sự kh&oacute; chịu bởi những điều phức tạp đi k&egrave;m m&agrave; m&igrave;nh chưa đ&aacute;nh gi&aacute; cao ch&uacute;ng so với 2 ứng dụng trang bị sẵn n&agrave;y.<br><br></span></p>\r\n<h2 id=\"menuid0\" class=\"TinhteMods_HeadingTag TinhteMods_HeadingTagH2\"><strong>Apple Carplay - Android Auto c&oacute; những ứng dụng n&agrave;o ?</strong></h2>\r\n<p><span class=\"bdImage_attachImage\"><span class=\"inner\"><img src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6499161_apple-carplay-android-auto-tinhte-4.jpg\" alt=\"apple-carplay-android-auto-tinhte-4.jpg\" data-height=\"736\" data-width=\"2048\"></span></span><span class=\"xf-body-paragraph\"><br><br><br></span><span class=\"bdImage_attachImage\"><span class=\"inner\"><img src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6499350_apple-carplay-android-auto-tinhte-5.jpg\" alt=\"apple-carplay-android-auto-tinhte-5.jpg\" data-height=\"736\" data-width=\"2048\"></span></span></p>	\\image\\Post\\f2cfcc53-ee9f-4e84-96b0-1fdff0e83944.jpg			acfd2f79-5adc-4aa3-b3ee-d2420d01d653	2\r\n2	Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ...	2023-07-19 02:35:42.7391493	<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>	",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2386),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Tổng hợp về Apple Carplay - Android Auto trên xe hơi"
                        },
                        new
                        {
                            PostId = 2,
                            CategoryId = 1,
                            Content = "<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2410),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ..."
                        },
                        new
                        {
                            PostId = 3,
                            CategoryId = 2,
                            Content = "<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2415),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ..."
                        },
                        new
                        {
                            PostId = 4,
                            CategoryId = 1,
                            Content = "<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2419),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ..."
                        },
                        new
                        {
                            PostId = 5,
                            CategoryId = 2,
                            Content = "<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2423),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ..."
                        },
                        new
                        {
                            PostId = 6,
                            CategoryId = 3,
                            Content = "<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2428),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ..."
                        },
                        new
                        {
                            PostId = 7,
                            CategoryId = 3,
                            Content = "<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2432),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ..."
                        },
                        new
                        {
                            PostId = 8,
                            CategoryId = 3,
                            Content = "<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2436),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ..."
                        },
                        new
                        {
                            PostId = 9,
                            CategoryId = 4,
                            Content = "<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2441),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ..."
                        },
                        new
                        {
                            PostId = 10,
                            CategoryId = 4,
                            Content = "<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2445),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ..."
                        },
                        new
                        {
                            PostId = 11,
                            CategoryId = 3,
                            Content = "<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2449),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ..."
                        },
                        new
                        {
                            PostId = 12,
                            CategoryId = 4,
                            Content = "<div class=\"jsx-1755978857 imgWrapper\" role=\"button\">\r\n<div class=\"jsx-1755978857 fact-image\"><img class=\"jsx-1755978857 img\" src=\"https://photo2.tinhte.vn/data/attachment-files/2023/07/6498766_quan-dao-truong-sa-google-map.jpg\" alt=\"Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ...\"></div>\r\n</div>\r\n<div class=\"jsx-1755978857 body \">\r\n<div>\r\n<div class=\"jsx-587582891 xfBodyContainer\">\r\n<div class=\"jsx-587582891 xfBody  highlightLinkOnDarkBackground \" data-author=\"\"><span class=\"xf-body-paragraph\">Google đ&atilde; cập nhật bản đồ, đ&atilde; thấy lại cờ Việt Nam tr&ecirc;n n&oacute;c nh&agrave;... anh em kiểm tra nha. Toạ độ đ&acirc;y: 8.644181, 111.919350</span></div>\r\n</div>\r\n</div>\r\n</div>",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 37, 34, 902, DateTimeKind.Local).AddTicks(2453),
                            ImgSrc = "\\image\\Post\\be9fa4fc-5ef5-46a7-aab6-d77adfe10362.jpg",
                            Title = "Google đã cập nhật bản đồ, đã thấy lại cờ Việt Nam trên nóc nhà... anh em kiểm tra nha. Toạ độ..."
                        });
                });

            modelBuilder.Entity("TechSocial.Models.TblRating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Point")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("AccountId");

                    b.HasIndex("PostId");

                    b.ToTable("tblRatings");
                });

            modelBuilder.Entity("TechSocial.Models.TblAccount", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("TblAccount");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechSocial.Models.TblComments", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechSocial.Models.TblPost", "TblPost")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityUser");

                    b.Navigation("TblPost");
                });

            modelBuilder.Entity("TechSocial.Models.TblPost", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("TechSocial.Models.TblCategory", "Category")
                        .WithMany("TblPosts")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("TechSocial.Models.TblRating", b =>
                {
                    b.HasOne("TechSocial.Models.TblAccount", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("TechSocial.Models.TblPost", "Post")
                        .WithMany("TblRatings")
                        .HasForeignKey("PostId");

                    b.Navigation("Account");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("TechSocial.Models.TblCategory", b =>
                {
                    b.Navigation("TblPosts");
                });

            modelBuilder.Entity("TechSocial.Models.TblPost", b =>
                {
                    b.Navigation("TblRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
